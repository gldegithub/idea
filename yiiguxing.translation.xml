<application>
  <component name="AppStorage">
    <option name="newTranslationDialogWidth" value="580" />
    <option name="newTranslationDialogX" value="928" />
    <option name="newTranslationDialogY" value="303" />
    <option name="pinNewTranslationDialog" value="true" />
    <histories>
      <item value="Extended Whitespace Throwable Proxy Converter" />
      <item value="Whitespace Throwable Proxy Converter" />
      <item value="so you see&#10;&#9;&#9; traces in logs without having to configure it." />
      <item value="tokenize" />
      <item value=" Failed to introspect annotated methods" />
      <item value="introspect" />
      <item value="Failed to introspect annotated methods on class zipkin2.server.internal.ZipkinServerConfiguration" />
      <item value="transporter" />
      <item value="is Annotation Present" />
      <item value="expunge Stale Entry" />
      <item value="Moved to extension function. Put the 'content' argument first to fix Java" />
      <item value=" Result of selection criteria is not boolean" />
      <item value="SUBTRACT" />
      <item value="VARIABLEREF" />
      <item value="literal" />
      <item value="'identifier' but was 'lcurly({)'" />
      <item value="identifier" />
      <item value="lcurly" />
      <item value=" Unexpected token. Expected 'identifier' but was 'lcurly({)'" />
      <item value="Time expired" />
      <item value=" Return the &quot;head task&quot; of the priority queue.  (The head task is an&#10;      task with the lowest nextExecutionTime.)" />
      <item value="Extension Registry Lite" />
      <item value="Persistent State" />
      <item value="Participant State" />
      <item value="in quorum" />
      <item value="quorum" />
      <item value="    Finds an epoch number which is higher than any proposed epoch in quorum&#10;    set and propose the epoch to them." />
      <item value="    Waits until receives the CEPOCH message from the quorum." />
      <item value="change Phase" />
      <item value="the last acknowledged epoch." />
      <item value="       Attach the Sender to this channel. Subsequent handlers use this&#10;       information to determine origins of messages." />
      <item value="Handles server-side handshake." />
      <item value="SO REUSEADDR" />
      <item value=" The first vote should be itself." />
      <item value="FINALIZING" />
      <item value="Interface for the leader election implementation." />
      <item value="Election" />
      <item value="&#10;      Performs the specified {@code PrivilegedAction} with privileges&#10;      enabled. The action is performed with &lt;i&gt;all&lt;i&gt; of the permissions&#10;      possessed by the caller's protection domain.&#10;     &#10;      &lt;p&gt; If the action's {@code run} method throws an (unchecked)&#10;      exception, it will propagate through this method.&#10;     &#10;      &lt;p&gt; Note that any DomainCombiner associated with the current&#10;      AccessControlContext will be ignored while the action is performed.&#10;     &#10;      @param &lt;T&gt; the type of the value returned by the PrivilegedAction's&#10;                       {@code run} method.&#10;     &#10;      @param action the action to be performed.&#10;     &#10;      @return the value returned by the action's {@code run} method.&#10;     &#10;      @exception NullPointerException if the action is {@code null}" />
      <item value=" Determine handler adapter for the current request." />
      <item value=" individually filter routes so that filterWhen error delaying is not a&#10;&#9;&#9;&#9;&#9; problem" />
      <item value="preserve" />
      <item value="composite" />
      <item value="Determine the autowire candidate in the given set of beans.&#10;&#9;  &lt;p&gt;Looks for {@code @Primary} and {@code @Priority} (in that order).&#10;&#9;  @param candidates a Map of candidate names and candidate instances&#10;&#9;  that match the required type, as returned by {@link findAutowireCandidates}&#10;&#9;  @param descriptor the target dependency to match against&#10;&#9;  @return the name of the autowire candidate, or {@code null} if none found" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="634" />
        <entry key="ENGLISH" value="636" />
        <entry key="AZERBAIJANI" value="1" />
        <entry key="FRENCH" value="5" />
        <entry key="CROATIAN" value="2" />
        <entry key="LATIN" value="2" />
        <entry key="ROMANIAN" value="2" />
        <entry key="NORWEGIAN" value="1" />
        <entry key="SWEDISH" value="2" />
        <entry key="SPANISH" value="2" />
        <entry key="GREEK" value="1" />
        <entry key="VIETNAMESE" value="1" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1647825987006" />
  </component>
  <component name="Settings">
    <option name="keepFormat" value="true" />
    <option name="phoneticFontFamily" value="Book Antiqua" />
    <option name="primaryFontFamily" value="Book Antiqua" />
    <option name="primaryFontPreviewText" value="" />
    <option name="showExplanation" value="true" />
    <option name="targetLanguageSelection" value="PRIMARY_LANGUAGE" />
    <option name="translateDocumentation" value="true" />
  </component>
</application>